@use "sass:math";

// Función para generar paletas de colores
@function generate-color-palette($base-color, $amount: 20) {
  $color-palette: ();
  @for $i from 1 through $amount {
    $percentage: percentage($i / $amount);
    $color: mix(white, $base-color, $percentage);
    // Usa math.div para la división
    $scale-index: floor(math.div($i * 100, $amount));
    $color-palette: map-merge($color-palette, ('color-' + $scale-index: $color));
  }
  @return $color-palette;
}

// Generación de paletas de colores
$colors: (
  "gray": generate-color-palette(#000, 20),
  "red": generate-color-palette(#f00, 20),
  "orangered": generate-color-palette(orangered, 20),
  "orange": generate-color-palette(orange, 20),
  "coral": generate-color-palette(coral, 20),
  "gold": generate-color-palette(gold, 20),
  "yellow": generate-color-palette(yellow, 20),
  "lightyellow": generate-color-palette(lightyellow, 20),
  "lime": generate-color-palette(lime, 20),
  "olive": generate-color-palette(olive, 20),
  "green": generate-color-palette(green, 20),
  "teal": generate-color-palette(teal, 20),
  "turquoise": generate-color-palette(turquoise, 20),
  "cyan": generate-color-palette(cyan, 20),
  "lightblue": generate-color-palette(lightblue, 20),
  "blue": generate-color-palette(blue, 20),
  "navy": generate-color-palette(navy, 20),
  "indigo": generate-color-palette(indigo, 20),
  "violet": generate-color-palette(violet, 20),
  "purple": generate-color-palette(purple, 20),
  "magenta": generate-color-palette(magenta, 20),
  "pink": generate-color-palette(pink, 20),
  "brown": generate-color-palette(brown, 20),
  "silver": generate-color-palette(silver, 20),
  "grey": generate-color-palette(grey, 20),
  "ivory": generate-color-palette(ivory, 20),
  "beige": generate-color-palette(beige, 20)
);

$armonias: (
  "calida": ("red", "orangered", "orange", "coral", "gold", "yellow"),
  "fria": ("cyan", "lightblue", "blue", "navy", "indigo", "violet")
);

// Función para obtener colores de una armonía específica
@function color-de-armonia($nombre-armonia, $indice) {
  $nombre-color: nth(map-get($armonias, $nombre-armonia), $indice);
  $paleta-color: map-get($colors, $nombre-color);
  @return map-get($paleta-color, 'color-50');
}

// Función para generar armonías monocromáticas ajustada a 10 colores
@function generar-armonia-monocromatica($color-base, $cantidad: 10) {
  $armonia-monocromatica: ();
  @for $i from 1 through $cantidad {
    $luminosidad: 10% * ($i - 1); // Ajuste para soportar 10 variaciones
    $color-variado: mix($color-base, white, $luminosidad);
    $armonia-monocromatica: map-merge($armonia-monocromatica, ('color-' + $i: $color-variado));
  }
  @return $armonia-monocromatica;
}

// Genera armonías monocromáticas de 10 colores
$monocromatico-azul: generar-armonia-monocromatica(blue);
$monocromatico-rojo: generar-armonia-monocromatica(red);
$monocromatico-cafe: generar-armonia-monocromatica(brown);
$monocromatico-naranja: generar-armonia-monocromatica(orange);

